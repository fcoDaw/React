{"ast":null,"code":"var _jsxFileName = \"/home/fran/Documentos/Proyectos/list-users/src/services/getGifs.js\";\nimport Buscador from \"../components/Buscador\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = 'vhtnPW6GjeP1njrRj0qUvJsmXXEnLNLS';\nexport default function getGifs({\n  keyword = /*#__PURE__*/_jsxDEV(Buscador, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 44\n  }, this)\n} = {}) {\n  const apiURl = `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${keyword}&limit=10&offset=0&rating=g&lang=en'`;\n  return fetch(apiURl).then(res => res.json()).then(response => {\n    const {\n      data\n    } = response;\n\n    if (Array.isArray(data)) {\n      const gifs = data.map(image => image.images.downsized_medium.url);\n    }\n\n    return gifs;\n  });\n}","map":{"version":3,"sources":["/home/fran/Documentos/Proyectos/list-users/src/services/getGifs.js"],"names":["Buscador","apiKey","getGifs","keyword","apiURl","fetch","then","res","json","response","data","Array","isArray","gifs","map","image","images","downsized_medium","url"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,wBAArB;;AACA,MAAMC,MAAM,GAAG,kCAAf;AAGA,eAAe,SAASC,OAAT,CAAiB;AAACC,EAAAA,OAAO,gBAAG,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAX,IAA0B,EAA3C,EAA8C;AAEzD,QAAMC,MAAM,GAAI,gDAA+CH,MAAO,MAAKE,OAAQ,sCAAnF;AACA,SAAOE,KAAK,CAACD,MAAD,CAAL,CACNE,IADM,CACDC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADN,EAENF,IAFM,CAEDG,QAAQ,IAAI;AAChB,UAAM;AAACC,MAAAA;AAAD,QAASD,QAAf;;AAEA,QAAGE,KAAK,CAACC,OAAN,CAAcF,IAAd,CAAH,EAAuB;AACrB,YAAMG,IAAI,GAAGH,IAAI,CAACI,GAAL,CAAUC,KAAK,IAAIA,KAAK,CAACC,MAAN,CAAaC,gBAAb,CAA8BC,GAAjD,CAAb;AACD;;AAED,WAAOL,IAAP;AACD,GAVM,CAAP;AAYH","sourcesContent":["import Buscador from \"../components/Buscador\";\nconst apiKey = 'vhtnPW6GjeP1njrRj0qUvJsmXXEnLNLS';\n\n\nexport default function getGifs({keyword = <Buscador/>} = {}){\n\n    const apiURl = `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${keyword}&limit=10&offset=0&rating=g&lang=en'`;\n    return fetch(apiURl)\n    .then(res => res.json())\n    .then(response => {\n      const {data} = response;\n\n      if(Array.isArray(data)){\n        const gifs = data.map (image => image.images.downsized_medium.url);\n      }\n      \n      return gifs;\n    })\n  \n}"]},"metadata":{},"sourceType":"module"}