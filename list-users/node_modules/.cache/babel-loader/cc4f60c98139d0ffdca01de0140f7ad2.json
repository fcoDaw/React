{"ast":null,"code":"var _jsxFileName = \"/home/fran/Documentos/Proyectos/list-users/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GIFS = ['https://media3.giphy.com/media/datwfu4nZbjIiNPmDO/giphy.gif?cid=ecf05e47b6e8cf2fd6c02d082036fe0acbe1df1210e58bc4&rid=giphy.gif&ct=v', 'https://media0.giphy.com/media/CssHc6i86nbGRiaoA6/200.webp?cid=ecf05e47mo5egcijr6xssvsw2cam2axkun8nf4guqxe20fxf&rid=200.webp'];\nconst differentGif = ['https://giphy.com/stories/melon-man-c749b9ea-1b43'];\n\nfunction App() {\n  _s();\n\n  const [gifs, setGifs] = useState(GIFS); // La primera vez que editas el componente, solo se ejecuta una vez gracias al [] sin dependencias\n\n  useEffect(function () {\n    console.log('Efecto ejecutado');\n    setGifs(differentGif);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"App-content\",\n      children: [\n      /* Hacemos un mapeo para renderizar una imagen haces un mapeo del array*/\n      gifs.map(singleGif => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: singleGif\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 33\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setGifs(differentGif),\n        children: \" Cambiar GIFS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"aQNK4ZiJSIwZLkRkkGkr9ZbOc2k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/fran/Documentos/Proyectos/list-users/src/App.js"],"names":["React","useEffect","useState","GIFS","differentGif","App","gifs","setGifs","console","log","map","singleGif"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,WAAP;;AAIA,MAAMC,IAAI,GAAG,CACX,qIADW,EAEX,8HAFW,CAAb;AAKA,MAAMC,YAAY,GAAG,CACnB,mDADmB,CAArB;;AAIA,SAASC,GAAT,GAAgB;AAAA;;AAEd,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAACC,IAAD,CAAhC,CAFc,CAId;;AACAF,EAAAA,SAAS,CAAC,YAAU;AAClBO,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAF,IAAAA,OAAO,CAACH,YAAD,CAAP;AACD,GAHQ,EAGP,EAHO,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAS,MAAA,SAAS,EAAE,aAApB;AAAA;AAEI;AACAE,MAAAA,IAAI,CAACI,GAAL,CAASC,SAAS,iBAAI;AAAK,QAAA,GAAG,EAAEA;AAAV;AAAA;AAAA;AAAA;AAAA,cAAtB,CAHJ,eAOE;AAAQ,QAAA,OAAO,EAAG,MAAMJ,OAAO,CAACH,YAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAxBQC,G;;KAAAA,G;AA2BT,eAAeA,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\n\n\n\nconst GIFS = [\n  'https://media3.giphy.com/media/datwfu4nZbjIiNPmDO/giphy.gif?cid=ecf05e47b6e8cf2fd6c02d082036fe0acbe1df1210e58bc4&rid=giphy.gif&ct=v',\n  'https://media0.giphy.com/media/CssHc6i86nbGRiaoA6/200.webp?cid=ecf05e47mo5egcijr6xssvsw2cam2axkun8nf4guqxe20fxf&rid=200.webp'\n]\n\nconst differentGif = [\n  'https://giphy.com/stories/melon-man-c749b9ea-1b43'\n]\n\nfunction App()  {\n\n  const [gifs, setGifs] = useState(GIFS);\n\n  // La primera vez que editas el componente, solo se ejecuta una vez gracias al [] sin dependencias\n  useEffect(function(){\n    console.log('Efecto ejecutado');\n    setGifs(differentGif);\n  },[]) \n  \n  return (\n    <div className=\"App\">\n      <section className =\"App-content\">\n        {\n          /* Hacemos un mapeo para renderizar una imagen haces un mapeo del array*/ \n          gifs.map(singleGif => <img src={singleGif} />)\n          \n        }\n\n        <button onClick= {() => setGifs(differentGif)}> Cambiar GIFS</button>\n          \n      </section>\n    </div>\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}